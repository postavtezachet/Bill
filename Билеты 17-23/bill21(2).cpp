//Билет 21 задание 2
//Максим
//Даны массивы структур из двух элементов, содержащих указатели на структуры. 1-я структура – имя студента и группа, вторая – 4 балла. Найти студента
//с наибольшим баллом.
// как обычно какая-то залупа. Очень мутное условие. Я создал массив в котором каждый элемент это массив из двух элемментов в которые я засунул
// указатели на структуры
#include<stdio.h>
#include<Windows.h>
#include<locale.h>
#include<string.h>
#pragma warning(disable : 4996) // чтобы можно было использовать scanf fopen и т.д.
struct inf {// Это первая структура которая с именем студента и группой
	char name[30];
	int group;

};
struct mark {// это вторая с отметкой
	int mark;
};
struct student {// Тут я создаю структуру с двумя предыдущими и засовываю это в объединение
	union {
		inf a;
		mark b;
	}un;
	
};
int main() {
	system("chcp 1251>null");// Тут мы меняем кодировку(так как setlocale не позволяет нам записывать строки на русском)
	student** mas;
	int n;
	printf("Введите количество студентов\n");
	while (!scanf("%d", &n) || n < 0) {// проверка на ввод числа и является ли это число >0
		rewind(stdin); // это очищение буффера( так как после scanf остаётся \n функции типо gets могут его прочитать и произойдёт прикол)
	}
	rewind(stdin);// это очищение буффера( так как после scanf остаётся \n функции типо gets могут его прочитать и произойдёт прикол)
	char name[30];
	mas = (student**)calloc(n, sizeof(student*));// выделяем память под студентов))
	for (int i = 0; i < n; i++) {
		mas[i] = (student*)calloc(2, sizeof(student));// в каждом элементе массива создаём два элемента( по факту это матрица n на 2)
	}
	for (int i = 0; i < n; i++) {// Тут мы вводим информацию
		printf("Введите информацию о студенте номер %d\n", i + 1);
		printf("Имя\n");
		gets_s(name, 30);
		strcpy(mas[i][0].un.a.name, name);//мы заполняем первый элемент (там где имя и группа)(strcpy копирует одну строку в другую)
		printf("Группа\n");
		while (!scanf("%d", &mas[i][0].un.a.group)) {//Я решил использовать объединение так как так можно сэкономить память
													// А что куда записывать я определяю по индексу (0 в структуру с именем и группой, 1 в структуру с отметкой)
			rewind(stdin);
		}
		rewind(stdin);
		printf("Отметка\n");
		while (!scanf("%d", &mas[i][1].un.b.mark) || ((mas[i][1].un.b.mark<0)|| (mas[i][1].un.b.mark>10))){// тут мы вводим отметку и проверяем
																											//чтобы отметка была меньше 10 и больше 0
			rewind(stdin);
		}
		rewind(stdin);
	}
	int max = 0, maxi;//maxi запоминает номер студента у которого самая большая елда(отметка)
	for (int i = 0; i < n; i++) {// тут мы находим максимальную отметку и запоминаем её в max
		if (mas[i][1].un.b.mark > max) {
			max = mas[i][1].un.b.mark;
			maxi = i;
		}
	}
	printf("\nСтудент с наивысшей отметкой\n");// выводим информацию о студенте с самой большой отметкой
	printf("Имя %s\n", mas[maxi][0].un.a.name);
	printf("Группа %d\n", mas[maxi][0].un.a.group);
	printf("Отметка %d\n", mas[maxi][1].un.b.mark);
	for (int i = 0; i < n; i++) {
		free(mas[i]);// очищаем память
	}
	return 0;
}