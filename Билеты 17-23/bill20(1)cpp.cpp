//Билет 20 задание 1
//Максим
//Удалить из текстового файла повторяющиеся символы.
//Тут мы будем удалять все одинаковые символы кроме одного первого(типо если а а б то будет а б)
//Идём по файлу и каждый символ сравниваем со всеми остальными в файле и если находим одинаковый то сдвигаем файл
//и уменьшаем его размер
#include<stdio.h>
#include<locale.h>
#include<io.h>
#pragma warning(disable : 4996)// чтобы работал scanf fopen и т.д.
void del(FILE* f, fpos_t start, fpos_t end) {//функция удаления которая принимает указатель на файл
											// и позиции перед и после удаляемого элемента
	char c1;//для чтения файла
	while (1) {
		fsetpos(f, &end);// переходим после удаляемого элемента(только на первой итерации после удаляемого)
						//дальше после следующего(чтобы сдвинуть содержимое файла)
		fscanf(f, "%c", &c1);// запоминаем элемент
		
		if (feof(f)) {// если конец файла то выход из цикла
			break;
		}
		fsetpos(f, &start);// переходим в позицию перд удаляемым(только на первой итерации перед удаляемым)
		fprintf(f, "%c", c1);// записываем на место удаляемого следующий элемент
		start++;// увеличиваем позиции на 1 чтобы двигаться по файлу
		end++;
	}
}
void gets_max(char* name, int n) { // I hate gets and i created this function
									// это моя функция из лаб и её можно заменить на gets
								
	int i = 0;
	char c;
	do {
		rewind(stdin);
		i = 0;
		c = ' ';
		int error = 0;
		while (c != '\n') {
			scanf("%c", &c);

			if (c != '\n') {
				name[i] = c;
				i++;
			}
			if (i > n) { // if input more than n
				printf("error\n");
				error = 1;
				break;
			}

		}
		if (error == 0) {
			break;
		}
	} while (1);
	name[i] = '\0';
}
int main() {
	setlocale(LC_ALL, "ru");
	FILE* f;
	fpos_t start = 0, end, trig=0;// start позиция перед удаляемым символом end после удаляемого символа
	int replic = 0;
	char st[20];
	printf("Введите строку на английском языке\n");
	gets_max(st, 20);
	if (!(f = fopen("file.txt", "w+"))) {
		printf("Error\n");
		return 0;
	}
	int i=0;
	fprintf(f, "%s", st);// записываем в файл строку
	char c, c1;// с будет проходить по файлу, а с1 будет проходить по файлу каждый раз когда смещается с чтобы найти повторы
	rewind(f);// переходим в начало файла
	fscanf(f,"%c", &c);// читаем первый элемент
	printf("Файл до удаления\n");
	while (1) {// это цикл для вывода файла до удаления
		printf("%c", c);
		
		fscanf(f,"%c", &c);
		if (feof(f)) {
			break;
		}
	}
	i = ftell(f);// в i мы записываем размер файла и будем его уменьшать на 1 когда удаляем 1 символ
	rewind(f);// переходим в начало файла
	while (1) {//цикл 1
		fsetpos(f, &trig);// переходим там где мы закончили перед удалением(так как мы будем двигаться по всему файлу чтобы найти повторы)
		fscanf(f, "%c", &c);// запоминаем символ
		fgetpos(f, &trig);// запоминаем где мы остановились чтобы вернуться на следующей итерации цикла 1
		if (feof(f)) {// если конец файла то выходим из цикла 1
			break;
		}
		while (1) {//цикл 2
			
			fgetpos(f, &start);// запоминаем позицию перед элементом(возможно того что надо удалить)
			fscanf(f, "%c", &c1);// запоминаем символ
			fgetpos(f, &end);// запоминаем позицию после элемента (возможно того что надо удалить)
			if (feof(f)) {// если закончился файл то выходим из цикла 2
				break;
			}
			if (c1 == c && c1!=' ') {// если мы нашли повтор и это не пробел
				del(f, start, end);
				i--;// уменьшаем i
				chsize(fileno(f), i);// уменьшаем размер файла
				fsetpos(f, &start);// чтобы после функции удаления мы не оказались в рандомном месте файла

			}
		}
	}
	rewind(f);// переходим в начало файла
	printf("\n");
	fscanf(f, "%c", &c);
	printf("Файл после удаления\n");
	while (1) {// цикл вывода файла после удаления
		printf("%c", c);

		fscanf(f, "%c", &c);
		if (feof(f)) {
			break;
		}
	}
	fclose(f);
	return 0;
}