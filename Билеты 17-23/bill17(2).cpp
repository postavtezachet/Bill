//Сделала Максим
//Билет 17 задание 2
//Рекурсивно создать двунаправленное кольцо
//Просто обычное кольцо, но у меня одна особенность: голова всегда слева(типо если перейти на левый указатель от головы,
//то попадёшь в конец
#include<stdio.h>
#include<Windows.h>
#include<locale.h>
#pragma warning(disable : 4996) // чтобы можно было использовать scanf fopen и т.д.
struct ring { // двунаправелнное кольцо с каким-то числом
	int n; // основная информация(можно и не число, но это моя прога и делаю как хочу)
	ring* left;
	ring* right;
};
void create(ring** head, int n);// это надо чтобы можно было функции написать после main
void output(ring* head);
int main() {
	setlocale(LC_ALL, "ru");
	ring* head;// Точка входа в кольцо
	head = nullptr;// чтобы мы могли определить когда у нас кольцо ещё не создано
	create(&head, 5);// это рекурсивная функция создания и аргументами она принимает указатель на голову(указатель на указатель)
					// так как нам надо чтобы в функции мы могли изменять голову(а если мы отправим просто голову, то отправится копия)
					// и число которое показывает сколько элементов мы хотим создать(можете менять 5 на то что хотите)
	output(head);// вывод(не рекурсивный(на экзе наверное надо только функция создания))
				// в функцию вывода мы можем отправить просто указатель(так как нам не надо его изменять и нам хватит копии)
	return 0;

}
void create(ring** head, int n) {//рекурсивное создание кольца(основная идея это добавление или создание кольца,
								// а потом просто вызываем функцию с количеством элементов на один меньше
	if (n == 0) { // если мы получили 0, значит мы добавили все элементы в кольцо и мы заканчиваем последнюю функцию и выходим из рекурсии
		return;
	}
	ring* s;// это указатель на структуру в которую мы запишем информацию и присоеденим к кольцу
	s = (ring*)calloc(1, sizeof(ring));// выделяем память под структуру
	printf("Введите число\n");
	while (!scanf("%d", &s->n)) {//мы вводим информацию в структуру
								// тут проверка на ввод(чтобы кто-то умный не ввёл букву)
		rewind(stdin);
		printf("Error\n");
	}
	
	s->left = s->right = nullptr;// просто чтобы не было мусора в указателях структуры
	if (!(*head)) {// если кольца ещё нет, то мы его создаём
		s->left = s->right = s;// зацикливаем указатели(так как у нас кольцо)
		(*head) = s;// ставим точку входа на созданную нами структуру
	}
	else {// если кольцо уже есть
		s->left = (*head)->left;// так как у нас кольцо у которого точка входа всегда крайний левый элемент
								// то мы связываем левый указатель новой структуры с крайним правым элементом
		(*head)->left->right = s;// тут мы связываем крайний правый элемент с новым(у нас двунаправленное кольцо)
		s->right = (*head);// правый указатель новой структуры связываем с точкой входа(с крайним левым элементом)
							//если кольцо расположить в линию то это самая большая стрелка которая от крайнего 
							//правого элемента к крайнему левому
		(*head)->left = s; //тут делаем вторую большую стрелку которая от крайнего левого до крайнего правого
	}
	create(head, n - 1);//вызываем эту функцию с количеством на один меньше
						//я представляю что это как цикл(мы сделали одну итерацию и повторяем всё заново)
}
void output(ring* head) {// функция вывода(она наверное на экзе не нужна)(не рекурсивная)
	ring* s = head;// запоминаем какой элемент является точкой входа(чтобы понять когда мы прошли всё кольцо
	printf("Ввывод\n");
	while (1) {// цикл выводит пока не встретит точку входа(s)
		printf("%d ", head->n);
		head = head->right;// мы идём слева на право
		if (head == s) {// если мы на точке входа которую запомнили, то выходим из цикла
			break;
		}
	}
}
